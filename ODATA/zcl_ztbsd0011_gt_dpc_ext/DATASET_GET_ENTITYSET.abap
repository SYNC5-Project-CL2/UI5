METHOD DATASET_GET_ENTITYSET.

  DATA : LS_ZTBSD0090 TYPE ZTBSD0090,
     LT_ZTBSD0090 LIKE TABLE OF LS_ZTBSD0090,
     LT_DATA LIKE TABLE OF LS_ZTBSD0090.

  DATA : LS_COM TYPE N LENGTH 4.

  READ TABLE IT_FILTER_SELECT_OPTIONS INTO DATA(LS_FILTER_YEAR) WITH TABLE KEY PROPERTY = 'Salesyr'.

  LS_COM = SY-DATUM+0(4). " 2024
  LOOP AT LS_FILTER_YEAR-SELECT_OPTIONS INTO DATA(LS_OPTION).
   IF LS_OPTION-LOW IS NOT INITIAL.
    LS_COM = LS_OPTION-LOW.
   ENDIF.
  ENDLOOP.

 \* ZTBPP0010 데이터를 Get 한다.
 \* 생산운영계획 데이터
  SELECT A~SALESYR, B~SALESDATE, B~AMOUNTPRD, B~UNITCODE
   FROM ZTBPP0010 AS A JOIN ZTBPP0011 AS B ON A~SOPWNUM = B~SOPWNUM
   WHERE A~SALESYR = @LS_COM
   INTO TABLE @DATA(LT_ZTBPP0010).

 \* 가공한 데이터를 잘 넣어준다
  LOOP AT LT_ZTBPP0010 INTO DATA(LS_ZTBPP0010).
   LS_ZTBSD0090 = VALUE #( SALESYR = LS_ZTBPP0010-SALESYR
               SAMONTH = LS_ZTBPP0010-SALESDATE+4(2)
               SOPAMOUNTPRD = LS_ZTBPP0010-AMOUNTPRD
               UNITCODE1 = 'EA' ).
   APPEND LS_ZTBSD0090 TO LT_ZTBSD0090.
  ENDLOOP.

  DATA LS_SUM TYPE ZTBSD0011-AMOUNTPRD.
  SORT LT_ZTBSD0090 BY SALESYR SAMONTH ASCENDING.
 \* 생산운영계획 월별로 계산하기 위해 GROUP화
  LOOP AT LT_ZTBSD0090 INTO LS_ZTBSD0090
   GROUP BY ( KEY1 = LS_ZTBSD0090-SAMONTH
        KEY2 = LS_ZTBSD0090-SALESYR )
   INTO DATA(LT_GROUP).

   CLEAR : LS_SUM.

   LOOP AT GROUP LT_GROUP INTO DATA(LS_GROUP).
    LS_SUM = LS_SUM + LS_GROUP-SOPAMOUNTPRD.
   ENDLOOP.

   DATA LV_NUM TYPE CHAR10.
   CALL FUNCTION 'NUMBER_GET_NEXT'
    EXPORTING
     NR_RANGE_NR = '01'
     OBJECT   = 'ZBBSD0090'
    IMPORTING
     NUMBER   = LV_NUM.

   LS_ZTBSD0090-SOPIDX = LV_NUM.
   LS_ZTBSD0090-SOPAMOUNTPRD = LS_SUM.
   LS_ZTBSD0090-SALESYR = LT_GROUP-KEY2.
   LS_ZTBSD0090-SAMONTH = LT_GROUP-KEY1.
   APPEND LS_ZTBSD0090 TO LT_DATA.
  ENDLOOP.

  DATA : LS_ZTBSD0091 TYPE ZTBSD0090,
     LT_ZTBSD0091 LIKE TABLE OF LS_ZTBSD0090,
     LT_DATA2 LIKE TABLE OF LS_ZTBSD0090.

 \* 판매오더 데이터
  SELECT A~SODAT AS SALESDATE, B~AMOUNTPRD, B~UNITCODE
   FROM ZTBSD0030 AS A JOIN ZTBSD0031 AS B ON A~SONUM = B~SONUM
   WHERE A~STATUS <> 0
   INTO TABLE @DATA(LT_ZTBSD0030).

  LOOP AT LT_ZTBSD0030 INTO DATA(LS_ZTBSD0030).
   DATA(LS_COM2) = LS_ZTBSD0030-SALESDATE+0(4).
   CHECK LS_COM EQ LS_COM2.
   LS_ZTBSD0091 = VALUE #( SOAMOUNTPRD = LS_ZTBSD0030-AMOUNTPRD
               UNITCODE2 = LS_ZTBSD0030-UNITCODE
               SALESYR = LS_ZTBSD0030-SALESDATE+0(4)
               SAMONTH = LS_ZTBSD0030-SALESDATE+4(2) ).

   APPEND LS_ZTBSD0091 TO LT_ZTBSD0091.
  ENDLOOP.

  SORT LT_ZTBSD0091 BY SALESYR SAMONTH ASCENDING.
  LOOP AT LT_ZTBSD0091 INTO LS_ZTBSD0091
   GROUP BY ( KEY1 = LS_ZTBSD0091-SAMONTH
        KEY2 = LS_ZTBSD0091-SALESYR )
   INTO DATA(LT_GROUP2).

   CLEAR : LS_SUM.

   LOOP AT GROUP LT_GROUP2 INTO DATA(LS_GROUP2).
    LS_SUM = LS_SUM + LS_GROUP2-SOAMOUNTPRD.
   ENDLOOP.

   LS_ZTBSD0091-SOAMOUNTPRD = LS_SUM.
   LS_ZTBSD0091-SALESYR = LT_GROUP2-KEY2.
   LS_ZTBSD0091-SAMONTH = LT_GROUP2-KEY1.

   APPEND LS_ZTBSD0091 TO LT_DATA2.
  ENDLOOP.


  LOOP AT LT_DATA INTO DATA(LS_DATA).
   CLEAR LS_ZTBSD0091.

   READ TABLE LT_DATA2 INTO LS_ZTBSD0091 WITH KEY SALESYR = LS_DATA-SALESYR SAMONTH = LS_DATA-SAMONTH.
   LS_DATA-SOAMOUNTPRD = LS_ZTBSD0091-SOAMOUNTPRD.
   LS_DATA-UNITCODE2 = 'EA'.
   LS_DATA-UNITCODE1 = 'EA'.

   APPEND LS_DATA TO ET_ENTITYSET.
  ENDLOOP.

 ENDMETHOD.